apiVersion: v1
kind: Namespace
metadata:
  name: ${APP_NAME}
  labels:
    name: ${APP_NAME}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ${APP_NAME}
  namespace: ${APP_NAME}
  annotations:
    iam.gke.io/gcp-service-account: firebase-adminsdk-fbsvc@${PROJECT_ID}.iam.gserviceaccount.com
automountServiceAccountToken: true
---
apiVersion: v1
kind: Secret
metadata:
  name: next-server-actions-key
  namespace: ${APP_NAME}
type: Opaque
stringData:
  key: ${SERVER_ACTIONS_KEY_B64}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_NAME}
  namespace: ${APP_NAME}
  annotations:
    app.kubernetes.io/version: '${IMAGE_TAG}'
spec:
  minReadySeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ${APP_NAME}
  template:
    metadata:
      annotations:
        app.kubernetes.io/version: '${IMAGE_TAG}'
      labels:
        app: ${APP_NAME}
    spec:
      serviceAccountName: ${APP_NAME}
      containers:
        - name: ${APP_NAME}
          image: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${APP_NAME}/${APP_NAME}:${IMAGE_TAG}
          ports:
            - containerPort: ${PORT}
          env:
            - name: NEXT_SERVER_ACTIONS_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: next-server-actions-key
                  key: key
            - name: PORT
              value: '${PORT}'
          startupProbe:
            httpGet:
              path: /health
              port: ${PORT}
            periodSeconds: 5
            failureThreshold: 60
          readinessProbe:
            httpGet:
              path: /health
              port: ${PORT}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '768Mi'
              cpu: '500m'
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: ${APP_NAME}
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: ${APP_NAME}
---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}
  namespace: ${APP_NAME}
spec:
  selector:
    app: ${APP_NAME}
  ports:
    - protocol: TCP
      port: 80
      targetPort: ${PORT}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
  namespace: ${APP_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudflared
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      containers:
        - name: cloudflared
          image: cloudflare/cloudflared:latest
          args:
            - tunnel
            - run
            - --token
            - ${TUNNEL_TOKEN}
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: ${APP_NAME}
  namespace: ${APP_NAME}
  labels:
    app: ${APP_NAME}
spec:
  scaleTargetRef:
    name: ${APP_NAME}
  pollingInterval: 10
  cooldownPeriod: 60
  minReplicaCount: 1
  maxReplicaCount: 1
  triggers:
    - type: cpu
      metricType: Utilization
      metadata:
        value: '75'
    - type: memory
      metricType: Utilization
      metadata:
        value: '70'
